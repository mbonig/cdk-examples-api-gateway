// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "GetPersonHandler0EA48F33": {
      "DependsOn": [
        "GetPersonHandlerServiceRoleDefaultPolicy5615673A",
        "GetPersonHandlerServiceRole576B60AB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "my-bucket",
          "S3Key": "my-key",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "INDEX_NAME": "people",
            "TABLE_NAME": {
              "Fn::ImportValue": "Api:ExportsOutputRefMyTable794EDED1558A264E",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "GetPersonHandlerServiceRole576B60AB",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetPersonHandlerServiceRole576B60AB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetPersonHandlerServiceRoleDefaultPolicy5615673A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::ImportValue": "Api:ExportsOutputFnGetAttMyTable794EDED1ArnDFAD2254",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetPersonHandlerServiceRoleDefaultPolicy5615673A",
        "Roles": [
          {
            "Ref": "GetPersonHandlerServiceRole576B60AB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestApiperson1830F612": {
      "Properties": {
        "ParentId": {
          "Fn::ImportValue": "Api:ExportsOutputFnGetAttMyRestApi2D1F47A9RootResourceIdA8A99F67",
        },
        "PathPart": "person",
        "RestApiId": {
          "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApipersonGET904182CB": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetPersonHandler0EA48F33",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApiperson1830F612",
        },
        "RestApiId": {
          "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApipersonGETApiPermissionTesttestRestApi41EB688DGETperson6EB250F6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPersonHandler0EA48F33",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
              },
              "/test-invoke-stage/GET/person",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipersonGETApiPermissiontestRestApi41EB688DGETperson18F55CAB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPersonHandler0EA48F33",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
              },
              "/*/GET/person",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipersonid7E2EA5B5": {
      "Properties": {
        "ParentId": {
          "Ref": "RestApiperson1830F612",
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApipersonidGET7C3772D5": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetPersonHandler0EA48F33",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApipersonid7E2EA5B5",
        },
        "RestApiId": {
          "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApipersonidGETApiPermissionTesttestRestApi41EB688DGETpersonid3E51EF8C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPersonHandler0EA48F33",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
              },
              "/test-invoke-stage/GET/person/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipersonidGETApiPermissiontestRestApi41EB688DGETpersonid04966456": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetPersonHandler0EA48F33",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Fn::ImportValue": "Api:ExportsOutputRefMyRestApi2D1F47A95DC88B97",
              },
              "/*/GET/person/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
